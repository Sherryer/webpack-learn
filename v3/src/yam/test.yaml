# 此文件是代码片段文件，尝试修改为yaml文件是否方便进行编辑

- name: 头部
  template:
  - title: 标准头部组件
    code: |-
      import { Header } from 'ysp-interior-components';
      export default () => <Header amStyle="primary" title="标题文本" />;
  - title: 带返回头部组件
    code: |-
      import { Header, HeaderLeft } from 'ysp-interior-components';
      import { back } from 'appRenderer';
      export default () =>
      <Header amStyle="primary" title="标题文本">
        <HeaderLeft>
          <AMUI.Button amStyle="primary" onClick={back}>返回</AMUI.Button>
        </HeaderLeft>
      </Header>;
  - title: 带右侧按钮头部组件
    code: |-
      import { Header, HeaderRight } from 'ysp-interior-components';
      export default () =>
      <Header amStyle="primary" title="标题文本">
        <HeaderRight>
          <AMUI.Button amStyle="primary" style={{ margin: 0 }}>按钮</AMUI.Button>
        </HeaderRight>
      </Header>;
  - title: 两边都有按钮的头部组件
    code: |-
      import { Header, HeaderLeft, HeaderRight } from 'ysp-interior-components';
      import { back } from 'appRenderer';
      export default () =>
      <Header amStyle="primary" title="标题文本">
        <HeaderLeft>
          <AMUI.Button amStyle="primary" style={{ margin: 0 }} onClick={back}>返回</AMUI.Button>
        </HeaderLeft>
        <HeaderRight>
          <AMUI.Button amStyle="primary" style={{ margin: 0 }}>按钮</AMUI.Button>
        </HeaderRight>
      </Header>;

- name: 列表
  template:
    - title: 普通展示列表
      code: |-
        import { CardList } from 'ysp-interior-components';
        export default () => <CardList
          data={{
           "title":["主题", "申请人", "申请日期", "流水号"],
           "content":[
             ["加班申请", "user1", "2016-08-07 17:19", "000009"],
             ["请假申请", "user2", "2016-09-07 18:19", "000013"],
             ["请假申请", "user9", "2016-07-15 16:33", "000002"],
             ["补录考勤申请", "user5", "2016-08-07 17:22", "000001"]
           ]
          }}
          text="点击加载更多"
          cardNumber={3}
          wrap={true}
          layout={false}
          flex={0.3}
          onCellClick = {function(index, value){console.log(index, value)}}
        />
    - title: 手风琴列表
      code: |-
        import { Accordion, AccordionItem } from 'ysp-interior-components';
        export default () =>
        <Accordion>
          {[['歌词1', '<p>人都应该有梦 有梦就别怕痛</p><p>有雷声在轰不停 雨泼进眼里看不清</p><p>谁急速狂飙 溅我一身 的泥泞</p><p>很决定我想去哪里 往天堂要跳过地狱</p><p>也不恐惧 不逃避</p>'],
           ['歌词2', '<p>这不是脾气 是所谓志气 与勇气</p><p>你能推我下悬崖 我能学会飞行</p><p>从不听 谁的命令 很独立</p><p>耳朵用来听自己的心灵</p>'],
           ['歌词3', '<p>淋雨一直走 是一颗宝石就该闪烁</p><p>人都应该有梦 Oh 有梦就别怕痛</p><p>淋雨一直走 是道阳光就该暖和</p><p>人都应该有梦 Oh 有梦就别怕痛</p>']].map(([title, html], index) =>
          <AccordionItem title={title} >
            <div dangerouslySetInnerHTML={{ __html: html }} />
          </AccordionItem>)}
        </Accordion>;
    - title: 表格
      code: |-
        import { Table } from 'ysp-interior-components';
        export default () =>
        <Table
          data={{
            title: ['主题', '申请人', '申请日期', '流水号'],
            content: [['加班申请', 'user1', '2016-08-07 17:19', '000009'], ['外出申请', 'user3', '2016-08-07 17:19', '000008'], ['离职申请', 'user2', '2016-08-07 17:19', '000007']]
          }}
        />
    - title: 卡片列表（配合数据采集Table）
      code: |-
        export default function({ customData, customHandler }) {
          return (
            <div>
              {customData.map((item, index) => (
                <div key={index}>{index ? <div onClick={() => customHandler({ eventType: 'click', data: index })} style={{ margin: '10px 15px 0 15px', boxShadow: '0 0 2px rgba(0, 0, 0, 0.3)', padding: '5px 15px' }}>
                  {item.map((content, i) => (
                    <div key={i} style={{ display: 'flex' }}>
                      <span style={{ flex: 0.3, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{customData[0][i]}</span>
                      <span style={{ overflow: 'hidden', flex: 0.7, textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{content}</span>
                    </div>
                  ))}
                </div> : undefined}</div>
              ))}
            </div>
          );
        }

- name: 模态框
  template:
    - title: 普通模态框
      code: |-
        import { Dialog } from 'ysp-interior-components');
        export default class extends React.Component{
          constructor(props) {
            super(props);
            this.state = {
              open: false
            };
          }

          handleClick = () => {
            this.setState({
              open: !this.state.open
            });
          }

          render() {
            return (
              <div>
                <AMUI.Button block amStyle="primary" onClick={this.handleClick}>点我显示弹窗</AMUI.Button>
                <div style={{ position: 'absolute' }}>
                  {this.state.open &&
                    <Dialog config={{status: "real"}}>
                      <h4 className="modal-title">Modal 标题</h4>
                      <span onClick={this.handleClick} className="icon icon-close modal-icon"/>
                      <div className="modal-body">Hello, Modal 内容</div>
                    </Dialog>}
                </div>
              </div>
            );
          }
        }
    - title: 头部弹出模态框
      code: |-
        import { Header, HeaderLeft, HeaderRight, Dialog } from 'ysp-interior-components';
        import { back } from 'appRenderer';
        export default class extends React.Component{
          constructor(props) {
            super(props);
            this.state = {
              open: false
            };
          }

          static defaultProps = {
            title: '标题',
            describe: true,
            describe: <p>描述</p>
          }

          handleClick = () => {
            this.setState({
              open: !this.state.open
            });
          };

          render() {
            return (
              <Header amStyle="primary" title={this.props.title}>
                <HeaderLeft>
                  <AMUI.Button style={{ margin: 0 }} amStyle="primary" onClick={back}>返回</AMUI.Button>
                </HeaderLeft>
                {this.props.describe && <HeaderRight>
                  <AMUI.Button style={{ margin: 0 }} amStyle="primary" onClick={this.handleClick}>弹窗</AMUI.Button>
                </HeaderRight>}
                {this.state.open &&
                  <Dialog config={{status: "real"}}>
                    <h4 className="modal-title">Modal 标题</h4>
                    <span onClick={this.handleClick} className="icon icon-close modal-icon"/>
                    <div className="modal-body" style={{ color: 'black' }}>{this.props.describe}</div>
                  </Dialog>}
              </Header>
            );
          }
        };

- name: 采集
  template:
    - title: 获取Table数据
      code: |-
        if (elem) {
          var arr = [];
          var trs = elem.querySelectorAll('tr');
          var trsLen = trs.length;

          for (var i = 0; i < trsLen; i++) {
            var tds = trs[i].querySelectorAll('td');
            var tdsLen = tds.length;
            var ths = trs[i].querySelectorAll('th');
            var thsLen = ths.length;
            var pData = [];

            for (var j = 0; j < thsLen; j++) {
              pData.push(ths[j].textContent);
            }

            for (var j = 0; j < tdsLen; j++) {
              pData.push(tds[j].textContent);
            }

            arr.push(pData);
          }

          return arr;
        }
        return [];
    - title: 获取ul/li数据
      code: |-
        if (elem) {
          var arr = [];
          var lis = elem.querySelectorAll('li');
          var lisLen = lis.length;
          for (var i = 0; i < lisLen; i++) {
            arr.push(lis[i].innerHTML);
          }
          return arr;
        }
        return [];
    - title: 获取原网页
      code: return elem.innerHTML;